// Package toto contains the types for schema 'jlabo'.
package wsub

// Code generated by xo. DO NOT EDIT.

import (
	"database/sql"
	"fmt"
	"time"
)

// WsubContent represents a row from 'jlabo.wsub_content'.
type WsubContent struct {
	ID             uint      `json:"id"`               // id
	AssetID        uint      `json:"asset_id"`         // asset_id
	Title          string    `json:"title"`            // title
	Alias          string    `json:"alias"`            // alias
	Introtext      string    `json:"introtext"`        // introtext
	Fulltext       string    `json:"fulltext"`         // fulltext
	State          int8      `json:"state"`            // state
	Catid          uint      `json:"catid"`            // catid
	Created        time.Time `json:"created"`          // created
	CreatedBy      uint      `json:"created_by"`       // created_by
	CreatedByAlias string    `json:"created_by_alias"` // created_by_alias
	Modified       time.Time `json:"modified"`         // modified
	ModifiedBy     uint      `json:"modified_by"`      // modified_by
	CheckedOut     uint      `json:"checked_out"`      // checked_out
	CheckedOutTime time.Time `json:"checked_out_time"` // checked_out_time
	PublishUp      time.Time `json:"publish_up"`       // publish_up
	PublishDown    time.Time `json:"publish_down"`     // publish_down
	Images         string    `json:"images"`           // images
	Urls           string    `json:"urls"`             // urls
	Attribs        string    `json:"attribs"`          // attribs
	Version        uint      `json:"version"`          // version
	Ordering       int       `json:"ordering"`         // ordering
	Metakey        string    `json:"metakey"`          // metakey
	Metadesc       string    `json:"metadesc"`         // metadesc
	Access         uint      `json:"access"`           // access
	Hits           uint      `json:"hits"`             // hits
	Metadata       string    `json:"metadata"`         // metadata
	Featured       int8      `json:"featured"`         // featured
	Language       string    `json:"language"`         // language
	Xreference     string    `json:"xreference"`       // xreference
}

func (w WsubContent) String() string {
	return fmt.Sprintf("%3d:Title[%s]:Alias[%s]:Created[%v]:Modified[%v]", w.ID, w.Title,
		w.Alias, w.Created, w.Modified)
}

// Generated from index 'idx_xreference'.
func WsubContents(db *sql.DB, where string) ([]*WsubContent, error) {
	var err error

	sqlstr := `SELECT id, title, alias, introtext, state, ` +
		` catid, created, modified,language FROM jlabo.wsub_content `

	qs := sqlstr + "WHERE " + where + " and state=1 and language<>'en-GB'"
	fmt.Println(qs)
	// run query
	q, err := db.Query(qs)
	if err != nil {
		return nil, err
	}
	defer q.Close()

	// load results
	res := []*WsubContent{}
	for q.Next() {
		wc := WsubContent{}

		// scan
		err = q.Scan(&wc.ID, &wc.Title,
			&wc.Alias, &wc.Introtext, &wc.State, &wc.Catid,
			&wc.Created, &wc.Modified, &wc.Language)
		if err != nil {
			return nil, err
		}

		res = append(res, &wc)
	}

	return res, nil
}
