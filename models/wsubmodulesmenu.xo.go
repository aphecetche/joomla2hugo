// Package toto contains the types for schema 'jlabo'.
package toto

// Code generated by xo. DO NOT EDIT.

import (
	"errors"
)

// WsubModulesMenu represents a row from 'jlabo.wsub_modules_menu'.
type WsubModulesMenu struct {
	Moduleid int `json:"moduleid"` // moduleid
	Menuid   int `json:"menuid"`   // menuid

	// xo fields
	_exists, _deleted bool
}

// Exists determines if the WsubModulesMenu exists in the database.
func (wmm *WsubModulesMenu) Exists() bool {
	return wmm._exists
}

// Deleted provides information if the WsubModulesMenu has been deleted from the database.
func (wmm *WsubModulesMenu) Deleted() bool {
	return wmm._deleted
}

// Insert inserts the WsubModulesMenu to the database.
func (wmm *WsubModulesMenu) Insert(db XODB) error {
	var err error

	// if already exist, bail
	if wmm._exists {
		return errors.New("insert failed: already exists")
	}

	// sql insert query, primary key must be provided
	const sqlstr = `INSERT INTO jlabo.wsub_modules_menu (` +
		`moduleid, menuid` +
		`) VALUES (` +
		`?, ?` +
		`)`

	// run query
	XOLog(sqlstr, wmm.Moduleid, wmm.Menuid)
	_, err = db.Exec(sqlstr, wmm.Moduleid, wmm.Menuid)
	if err != nil {
		return err
	}

	// set existence
	wmm._exists = true

	return nil
}

// Update statements omitted due to lack of fields other than primary key

// Delete deletes the WsubModulesMenu from the database.
func (wmm *WsubModulesMenu) Delete(db XODB) error {
	var err error

	// if doesn't exist, bail
	if !wmm._exists {
		return nil
	}

	// if deleted, bail
	if wmm._deleted {
		return nil
	}

	// sql query with composite primary key
	const sqlstr = `DELETE FROM jlabo.wsub_modules_menu WHERE moduleid = ? AND menuid = ?`

	// run query
	XOLog(sqlstr, wmm.Moduleid, wmm.Menuid)
	_, err = db.Exec(sqlstr, wmm.Moduleid, wmm.Menuid)
	if err != nil {
		return err
	}

	// set deleted
	wmm._deleted = true

	return nil
}

// WsubModulesMenuByMenuid retrieves a row from 'jlabo.wsub_modules_menu' as a WsubModulesMenu.
//
// Generated from index 'wsub_modules_menu_menuid_pkey'.
func WsubModulesMenuByMenuid(db XODB, menuid int) (*WsubModulesMenu, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`moduleid, menuid ` +
		`FROM jlabo.wsub_modules_menu ` +
		`WHERE menuid = ?`

	// run query
	XOLog(sqlstr, menuid)
	wmm := WsubModulesMenu{
		_exists: true,
	}

	err = db.QueryRow(sqlstr, menuid).Scan(&wmm.Moduleid, &wmm.Menuid)
	if err != nil {
		return nil, err
	}

	return &wmm, nil
}
