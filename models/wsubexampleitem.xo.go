// Package toto contains the types for schema 'jlabo'.
package toto

// Code generated by xo. DO NOT EDIT.

import (
	"errors"
)

// WsubExampleItem represents a row from 'jlabo.wsub_example_items'.
type WsubExampleItem struct {
	ID uint `json:"id"` // id

	// xo fields
	_exists, _deleted bool
}

// Exists determines if the WsubExampleItem exists in the database.
func (wei *WsubExampleItem) Exists() bool {
	return wei._exists
}

// Deleted provides information if the WsubExampleItem has been deleted from the database.
func (wei *WsubExampleItem) Deleted() bool {
	return wei._deleted
}

// Insert inserts the WsubExampleItem to the database.
func (wei *WsubExampleItem) Insert(db XODB) error {
	var err error

	// if already exist, bail
	if wei._exists {
		return errors.New("insert failed: already exists")
	}

	// sql insert query, primary key provided by autoincrement
	const sqlstr = `INSERT INTO jlabo.wsub_example_items (` +
		`` +
		`) VALUES (` +
		`` +
		`)`

	// run query
	XOLog(sqlstr)
	res, err := db.Exec(sqlstr)
	if err != nil {
		return err
	}

	// retrieve id
	id, err := res.LastInsertId()
	if err != nil {
		return err
	}

	// set primary key and existence
	wei.ID = uint(id)
	wei._exists = true

	return nil
}

// Update statements omitted due to lack of fields other than primary key

// Delete deletes the WsubExampleItem from the database.
func (wei *WsubExampleItem) Delete(db XODB) error {
	var err error

	// if doesn't exist, bail
	if !wei._exists {
		return nil
	}

	// if deleted, bail
	if wei._deleted {
		return nil
	}

	// sql query
	const sqlstr = `DELETE FROM jlabo.wsub_example_items WHERE id = ?`

	// run query
	XOLog(sqlstr, wei.ID)
	_, err = db.Exec(sqlstr, wei.ID)
	if err != nil {
		return err
	}

	// set deleted
	wei._deleted = true

	return nil
}

// WsubExampleItemByID retrieves a row from 'jlabo.wsub_example_items' as a WsubExampleItem.
//
// Generated from index 'wsub_example_items_id_pkey'.
func WsubExampleItemByID(db XODB, id uint) (*WsubExampleItem, error) {
	var err error

	// sql query
	const sqlstr = `SELECT ` +
		`id ` +
		`FROM jlabo.wsub_example_items ` +
		`WHERE id = ?`

	// run query
	XOLog(sqlstr, id)
	wei := WsubExampleItem{
		_exists: true,
	}

	err = db.QueryRow(sqlstr, id).Scan(&wei.ID)
	if err != nil {
		return nil, err
	}

	return &wei, nil
}
